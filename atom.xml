<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RuoShuiSanQian</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hicksalmon.gitee.io/"/>
  <updated>2019-07-06T14:49:50.606Z</updated>
  <id>https://hicksalmon.gitee.io/</id>
  
  <author>
    <name>HickSalmon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日志</title>
    <link href="https://hicksalmon.gitee.io/2019/07/06/%E6%97%A5%E5%BF%97/"/>
    <id>https://hicksalmon.gitee.io/2019/07/06/日志/</id>
    <published>2019-07-06T14:45:40.034Z</published>
    <updated>2019-07-06T14:49:50.606Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p><img src="http://cdn.ruoshuisanqian.site/日志组件.png" alt><br>JCL组件结构图<br><img src="http://cdn.ruoshuisanqian.site/jcl组件结构图.png" alt><br><img src="http://cdn.ruoshuisanqian.site/jcl问题.png" alt><br>适配器模式<br><img src="http://cdn.ruoshuisanqian.site/日志适配器1.png" alt><br><img src="http://cdn.ruoshuisanqian.site/日志适配器2.png" alt></p></blockquote><hr><p>为了解决 jcl 的不足出现了 slf4j ， jcl 通过源码发现，他是采用的一个适配器模式，动态的去决定使用哪种日志，而 slf4j 不一样，他是采用的一种静态桥接方式，是用什么日志，就需要自己添加相应的桥接。对于slf4j的简介如下：<br><img src="http://cdn.ruoshuisanqian.site/SLF4J桥接.png" alt></p><hr><p>具体的桥接见下图:<br><img src="http://cdn.ruoshuisanqian.site/日志问题1.png" alt></p><hr><p>这里注意只有老版的 spring 是用的 jcl ，新版的 spring 并不是采用 jcl 实现的。</p><p>出现这种问题，解决方案有两种<br>1）直接将app中的日志桥接到log4j，即加一个slf4j-log4j12 的桥接器；<br>2）是通过一个替换器（jcl-over-slf4j）将jcl替换掉，来用 slf4f 的，即使用 log4j2 .</p><p>同理其他的日志在slf4j中也可以替换成功，替换方法如下：<br><img src="http://cdn.ruoshuisanqian.site/替换器.png" alt><br><img src="http://cdn.ruoshuisanqian.site/SLF4J各部件关系图.png" alt></p><hr><p>这个时候要注意一点就是不要，同时使用一种日志实现的适配和桥接，不然就会进入一个死循环，运行就会报一个 StackOverflowError ，堆栈溢出的错误。如下图：</p><hr><p><img src="http://cdn.ruoshuisanqian.site/SLF4J死循环.png" alt></p><hr><p>最后放一张简单的 log4j2.xml 的配置文件。</p><hr><p><img src="http://cdn.ruoshuisanqian.site/log4j2xml简单配置.png" alt></p><p> <strong>2019/7/6：</strong>生活的主题就是，面对复杂，保持欢喜。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;日志&quot;&gt;&lt;a href=&quot;#日志&quot; class=&quot;headerlink&quot; title=&quot;日志&quot;&gt;&lt;/a&gt;日志&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://cdn.ruoshuisanqian.site/日志组件.png&quot; alt&gt;&lt;b
      
    
    </summary>
    
      <category term="日志" scheme="https://hicksalmon.gitee.io/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="https://hicksalmon.gitee.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Flutter初体验踩坑记录</title>
    <link href="https://hicksalmon.gitee.io/2019/07/06/Flutter%E5%88%9D%E4%BD%93%E9%AA%8C%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://hicksalmon.gitee.io/2019/07/06/Flutter初体验踩坑记录/</id>
    <published>2019-07-06T03:50:01.000Z</published>
    <updated>2019-07-07T14:47:28.634Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="Flutter初体验踩坑记录"><a href="#Flutter初体验踩坑记录" class="headerlink" title="Flutter初体验踩坑记录"></a>Flutter初体验踩坑记录</h2></blockquote><hr><blockquote><p>由于Android Studio 实在过于慢了，我们在学习 Flutter 的时候，可以换用 VS Code 进行开发。</p></blockquote><hr><blockquote><p>而采用 VS Code 开发时，启动我们的虚拟机，我们可以自己写一个 windows 的批处理文件来启动虚拟机。之前我们安装过虚拟机，我们只需要在 AS 中查看 <strong>AVD Manager</strong> 中的虚拟机名称记住，接下来写一个 <strong>.bat</strong> 的脚本文件，在桌面建立一个任意名字的 <strong>xxx.bat</strong> 文件，找到 <strong>emulator.exe</strong> 的文件路径，在里面添加简单的脚本，如我的如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\AndroidSDK\emulator\emulator.exe -netdelay none -netspeed full -avd YaErYo</span><br></pre></td></tr></table></figure><blockquote><p>前面是 <strong>emulator.exe</strong>  的文件路径，<strong>-netdelay none</strong> 是设置网络延迟为 0 ，<strong>-netspeed full</strong>  是设置网络速度为全速，<strong>-avd YaErYo</strong>  是之前在 Android Studio 中下载的虚拟机的名字，不知道可以打开 AS 进行查看，这里注意的是如果虚拟机的名字有空格，我们需要将空格换成<strong>下划线</strong>，否则会报错。我这里的名字叫 YaErYo 没有下划线就不用管。</p></blockquote><hr><blockquote><p>当我们使用 VS Code 进行开发的时候，首先使用管理员权限运行我们之前建立的的 <strong>xxx.bat </strong> 脚本启动虚拟机，然后在 VS Code 中使用 <strong>Ctrl + ~</strong> 调起命令行工具，使用 <strong>flutter run</strong> 命令进行启动 flutter 程序，这样的目的是方便我们，在后续的过程中，使用快捷键 <strong>o</strong> 快速切换 <strong>IOS 界面</strong> 和 <strong>Android 界面</strong>视图；使用快捷键 <strong>p</strong> 显示虚拟机视图的网格，方便我们调试； 使用快捷键 <strong>r</strong> 实现<strong>热更新</strong>。</p></blockquote><p> <strong>2019/7/7：</strong>家是温暖的港湾，需要的是温度，不是压力，善待最亲近的人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;Flutter初体验踩坑记录&quot;&gt;&lt;a href=&quot;#Flutter初体验踩坑记录&quot; class=&quot;headerlink&quot; title=&quot;Flutter初体验踩坑记录&quot;&gt;&lt;/a&gt;Flutter初体验踩坑记录&lt;/h2&gt;&lt;/blockquote
      
    
    </summary>
    
      <category term="Flutter" scheme="https://hicksalmon.gitee.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="https://hicksalmon.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>3. jenkins学习--持续集成01</title>
    <link href="https://hicksalmon.gitee.io/2019/07/02/3.%20Jenkins%E5%AD%A6%E4%B9%A0--%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%9001/"/>
    <id>https://hicksalmon.gitee.io/2019/07/02/3. Jenkins学习--持续集成01/</id>
    <published>2019-07-02T13:46:32.897Z</published>
    <updated>2019-07-02T14:00:10.828Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="3-Jenkins学习–持续集成01"><a href="#3-Jenkins学习–持续集成01" class="headerlink" title="3. Jenkins学习–持续集成01"></a>3. Jenkins学习–持续集成01</h2></blockquote><blockquote><p><strong>1.jenkins安装</strong><br>jenkins安装方式很多，在这里我采用的是将 jenkins 的 war 放入 tomcat 中运行来安装的 jenkins 。<br>官网下载 jenkins war 包。 <a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a><br>利用Xftp 6 上传 war 至 tomcat 的 webapp 目录，运行 tomcat （./bin/startup.sh）<br>根据提示进行后续安装，选择插件安装的时候，选择默认的插件进行安装。<br><strong>2.jenkins JDK 配置</strong><br>JDK需要注意在服务器中需要配置环境变量， /etc/profile 中进行配置<br><img src="http://cdn.ruoshuisanqian.site/JDK配置.jpg" alt><br><strong>3.jenkins Maven 配置</strong><br>maven需要注意在服务器中需要配置环境变量， /etc/profile 中进行配置<br><img src="http://cdn.ruoshuisanqian.site/maven配置.jpg" alt><br> <strong>4.jenkins git 配置</strong><br> <img src="http://cdn.ruoshuisanqian.site/git配置.jpg" alt><br><strong>5.项目建立与码云打通</strong><br>如果是私有项目需要添加代码托管平台的账号和密码，才能拉取代码。<br><strong>6.使用 执行shell 实现持续集成</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt; #!/bin/bash</span><br><span class="line">&gt; source /etc/profile</span><br><span class="line">&gt; tomcat_path=/usr/tomcat/apache-tomcat-<span class="number">8.5</span>.38/webapps</span><br><span class="line">&gt; #war包路径 及 名称</span><br><span class="line">&gt; war_path=/root/.jenkins/workspace/conformity/target/firstone.war</span><br><span class="line">&gt; war_name=conformity.war</span><br><span class="line">&gt; war_file=$&#123;war_path&#125;$&#123;war_name&#125;</span><br><span class="line">&gt; #从git中下载的源码路径</span><br><span class="line">&gt; #$&#123;JENKINS_HOME&#125; 为全局变量 请事先查看 有没有声明没有在 在/etc/profile中声明</span><br><span class="line">&gt; #export JENKINS_HOME=/opt/run_/tomcat/tomcat8-7979/webapps/jenkins</span><br><span class="line">&gt; source_path=$&#123;JENKINS_HOME&#125;/workspace/conformity</span><br><span class="line">&gt; #su root</span><br><span class="line">&gt; #xtj1008611</span><br><span class="line">&gt; echo <span class="string">"切换到root用户成功"</span></span><br><span class="line">&gt; cd root/.jenkins/jobs/conformity</span><br><span class="line">&gt; #日志所在路径</span><br><span class="line">&gt; log_file=$&#123;JENKINS_HOME&#125;<span class="string">"/build_log.log"</span></span><br><span class="line">&gt; echo <span class="string">"一个大西瓜"</span> $&#123;log_file&#125;</span><br><span class="line">&gt; #定义一个函数 用来写入log文件</span><br><span class="line">&gt; writeLogFun()&#123;</span><br><span class="line">&gt;         <span class="keyword">if</span> [ ! -e $log_file ]</span><br><span class="line">&gt;         then</span><br><span class="line">&gt;                 echo <span class="string">"文件不存在 新建一个"</span></span><br><span class="line">&gt;                 touch $&#123;log_file&#125;</span><br><span class="line">&gt;         fi</span><br><span class="line">&gt;         nowtime=`date +%Y%m%d%H%M%S`</span><br><span class="line">&gt;         echo $nowtime$<span class="number">1</span> &gt;&gt; $log_file</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; writeLogFun <span class="string">"开始执行 mvn install命令当前路径$(pwd)"</span></span><br><span class="line">&gt; #mvn install</span><br><span class="line">&gt; mvn <span class="keyword">package</span></span><br><span class="line">&gt; echo $&#123;war_file&#125;</span><br><span class="line">&gt; su root</span><br><span class="line">&gt; xtj100861</span><br><span class="line">&gt; mv $&#123;war_path&#125; $&#123;tomcat_path&#125;</span><br><span class="line">&gt; echo <span class="string">"两个大西瓜"</span> $&#123;tomcat_path&#125;</span><br><span class="line">&gt; sleep <span class="number">1</span>s</span><br><span class="line">&gt; writeLogFun <span class="string">"tomcat 进行重启"</span></span><br><span class="line">&gt; cd $&#123;tomcat_path&#125;</span><br><span class="line">&gt; ll</span><br><span class="line">&gt; cd ..</span><br><span class="line">&gt; ./bin/startup.sh</span><br><span class="line">&gt; echo [-e $&#123;war_file&#125;]</span><br><span class="line">&gt; echo <span class="string">"好像是成功了"</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>打包的时候可能出现找不到 xml 文件的情况。</p><p><strong>org.springframework.beans.factory.BeanDefinitionStoreException: Could not resolve bean definition resource pattern</strong> </p><p><strong>[classpath:spring/applicationContext-*.xml]; nested exception is java.io.FileNotFoundException: class path resource [spring/] cannot be resolved to URL because it does not exist</strong></p><p>此时是因为默认 maven 不扫描 xml文件，我们需要在 pom 文件中申明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;build&gt; </span><br><span class="line">&gt;     &lt;resources&gt;</span><br><span class="line">&gt;             &lt;resource&gt;</span><br><span class="line">&gt;                 &lt;directory&gt;src/main/java&lt;/directory&gt;</span><br><span class="line">&gt;                 &lt;includes&gt;</span><br><span class="line">&gt;                     &lt;include&gt;**<span class="comment">/*.properties&lt;/include&gt;</span></span><br><span class="line">&gt;                     &lt;include&gt;**/*.xml&lt;/include&gt;</span><br><span class="line">&gt;                 &lt;/includes&gt;</span><br><span class="line">&gt;                 &lt;filtering&gt;false&lt;/filtering&gt;</span><br><span class="line">&gt;         &lt;/resources&gt;</span><br><span class="line">&gt;     &lt;/build&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>shell 脚本能力还不够，需要加强，这里将之前的项目简单的上传打包，并发布成功了。具体的 shell 还得具体对待。</p></blockquote><p> <strong>2019/7/2：</strong>今天骚练在我家，明天他就回家了，我继续上班，不久的将来他去福建农林大学读研究生。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;3-Jenkins学习–持续集成01&quot;&gt;&lt;a href=&quot;#3-Jenkins学习–持续集成01&quot; class=&quot;headerlink&quot; title=&quot;3. Jenkins学习–持续集成01&quot;&gt;&lt;/a&gt;3. Jenkins学习–持续集成0
      
    
    </summary>
    
      <category term="CD-CI" scheme="https://hicksalmon.gitee.io/categories/CD-CI/"/>
    
    
      <category term="持续集成" scheme="https://hicksalmon.gitee.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>2.jenkins学习--虚拟机坑点2</title>
    <link href="https://hicksalmon.gitee.io/2019/06/22/2.Jenkins%E5%AD%A6%E4%B9%A0--%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9D%91%E7%82%B92/"/>
    <id>https://hicksalmon.gitee.io/2019/06/22/2.Jenkins学习--虚拟机坑点2/</id>
    <published>2019-06-22T06:50:16.529Z</published>
    <updated>2019-06-22T06:49:45.013Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="2-Jenkins学习–虚拟机坑点2"><a href="#2-Jenkins学习–虚拟机坑点2" class="headerlink" title="2. Jenkins学习–虚拟机坑点2"></a>2. Jenkins学习–虚拟机坑点2</h2><hr><h4 id="少了一些图形库文件引发一些故事"><a href="#少了一些图形库文件引发一些故事" class="headerlink" title="少了一些图形库文件引发一些故事"></a>少了一些图形库文件引发一些故事</h4><blockquote><ol><li>我在 VMware Workstation 装的是Ubuntu 16.04 server iso ，以至于差一些支持图形界面的库，当我想要安装jenkins时，出现了今天的第一个坑点，出现关于 <strong>AWT</strong> 的错误：<br><strong>java.lang.UnsatisfiedLinkError: /mnt/jdk1.8/jre/lib/amd64/libawt_xawt.so: libXtst.so.6: cannot open shared object file: No such file or directory</strong><br>百度了一下，需要安装，命令如下：<br><strong>apt-get install libxrender-dev</strong><br><strong>apt-get install libxtst-dev</strong></li><li>至此出现第二个关于<strong>虚拟机客户端</strong>的坑点（动态IP让我虚拟机不能上网了）。<br>首先了解了一下 VMWare Workstation中几种联网方式：<br>(1)  <strong>Bridged: Connected directly to the physical network</strong>，使用桥接网卡（VMnet0虚拟网卡），表示当前虚拟机与主机（指运行VMware Workstation软件的计算机）在同一个网络中;<br>(2) <strong>NAT: Used to share the host’s IP address</strong>，使用NAT网卡（VMnet8虚拟网卡），表示虚拟机通过主机单向访问主机及主机之外的网络，主机之外的网络中的计算机，不能访问该虚拟机;<br>(3)  <strong>Host-only： A private network shared with the host</strong>，只使用本地网络（VMnet1虚拟网卡），表示虚拟机只能访问主机及所有使用VMnet1虚拟网卡的虚拟机。主机之外的网络中的计算机不能访问该虚拟机，也不能被该虚拟机所访问；<br>(4) <strong>Custom: Specific virtual network</strong>，没有网络连接，表明该虚拟机与主机没有网络连接。<br><strong>#</strong> 而我前一天使用的时桥接模式,我的笔记本使用的又是 wifi ，路由器现在基本都是动态 IP ，基于此，前一天虚拟机客户端还能上网，今天不能上网了，可能就是虚拟机中默认使用了之前的 IP ，现在主机 IP 改变，他却没变，使得虚拟机不能上网了。于是在这里我就将联网模式改成 NAT 模式了，<strong>然后重启客户端</strong>就可以让虚拟机上网了。重启很重要，最后通过 <strong>ifconfig</strong> 查看分配给客户端的 IP ，使用Xshell 就可以上网了。</li></ol></blockquote></blockquote><p> <strong>2019/6/22：</strong>打开窗户让孤单透气，这一间屋子如此密闭，欢呼声仍飘在空气里，想空无一人的华丽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;2-Jenkins学习–虚拟机坑点2&quot;&gt;&lt;a href=&quot;#2-Jenkins学习–虚拟机坑点2&quot; class=&quot;headerlink&quot; title=&quot;2. Jenkins学习–虚拟机坑点2&quot;&gt;&lt;/a&gt;2. Jenkins学习–虚拟机坑点
      
    
    </summary>
    
      <category term="CD-CI" scheme="https://hicksalmon.gitee.io/categories/CD-CI/"/>
    
    
      <category term="持续集成" scheme="https://hicksalmon.gitee.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>1. jenkins学习--虚拟机坑点1</title>
    <link href="https://hicksalmon.gitee.io/2019/06/21/1.Jenkins%E5%AD%A6%E4%B9%A0--%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%9D%91%E7%82%B9/"/>
    <id>https://hicksalmon.gitee.io/2019/06/21/1.Jenkins学习--虚拟机坑点/</id>
    <published>2019-06-21T14:08:09.791Z</published>
    <updated>2019-06-22T06:45:50.745Z</updated>
    
    <content type="html"><![CDATA[<blockquote><hr><h2 id="1-Jenkins学习–虚拟机坑点1"><a href="#1-Jenkins学习–虚拟机坑点1" class="headerlink" title="1.Jenkins学习–虚拟机坑点1"></a>1.Jenkins学习–虚拟机坑点1</h2><hr><h4 id="买不起服务器就虚拟机来凑"><a href="#买不起服务器就虚拟机来凑" class="headerlink" title="买不起服务器就虚拟机来凑"></a>买不起服务器就虚拟机来凑</h4><blockquote><p> VMware Workstation 作为一种在桌面可以运行多种操作系统的虚拟计算机软件，首当其冲的要第一个搞定。这个的安装，我是之前安装好的没有什么记忆了，在此不做什么坑点的记录了。</p></blockquote><h4 id="Ubuntu-系统的安装坑点"><a href="#Ubuntu-系统的安装坑点" class="headerlink" title="Ubuntu 系统的安装坑点"></a>Ubuntu 系统的安装坑点</h4><blockquote><ol><li>从官网下载好了Ubuntu 16.04 server iso 镜像，server 镜像地址见 <a href="https://ubuntu.com/download/alternative-downloads" target="_blank" rel="noopener">https://ubuntu.com/download/alternative-downloads</a> ，可自由选择相关的版本；</li><li>在 VM 中进行安装，参照教程（具体操作我已经截图放在总结之后，即最后的截图），源地址： <a href="https://www.cnblogs.com/Alier/p/6337151.html" target="_blank" rel="noopener">https://www.cnblogs.com/Alier/p/6337151.html</a><br> 不过这里我下载的是 server ，在这里遇到几个坑点。<br> （1）. 安装过程中语言需要选择英文，否则在后续的安装过程中会出现语言包的问题，或者在安装完成时会出现乱码的问题。这个就很烦，应该有办法解决但是我没深入了解；<br> （2）.默认下载的ubuntu系统镜像源是 us 。所以会出现下载其他东西时很慢的现象，这个可以通过换镜像源的方式进行改进。<br> <strong>镜像更改如下操作：</strong><blockquote><p><strong>#利用vim修改镜像源配置</strong><br><strong>vim /etc/apt/sources.list</strong><br><strong>#替换为阿里的镜像源</strong><br><strong>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> xenial main restricted universe multiverse</strong><br><strong>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> xenial-security main restricted universe multiverse</strong><br><strong>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> xenial-updates main restricted universe multiverse</strong><br><strong>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> xenial-backports main restricted universe multiverse</strong><br><strong>#更新</strong><br><strong>sudo apt-get update</strong></p></blockquote></li></ol></blockquote><blockquote><p>3.我们平时可能用Xshell或者其他的远程连接工具更多，所以我们在这里安装好虚拟机之后一样用远程连接工具进行连接，这个时候往往会出现另一个比较坑的就是，发现用工具连不上，我在这里就出现了，原因是我的ubuntu没有支持 SSH ，所以在这里需要安装 SSH（安装过程不赘述）；<br>4.最后想要记录的是关于系统与虚拟机中如何实现文件共享的，我们可以在系统的某个盘中建立一个共享文件夹，然后在虚拟机中设置为共享文件夹。详情见下图：<br><strong>系统的共享文件夹</strong><br><img src="http://cdn.ruoshuisanqian.site/系统文件夹共享.jpg" alt><br><strong>虚拟机软件设置</strong><br><img src="http://cdn.ruoshuisanqian.site/虚拟机软件设置.jpg" alt><br><strong>命令行查看到的共享文件夹</strong><br><img src="http://cdn.ruoshuisanqian.site/命令行查看共享文件夹.jpg" alt></p></blockquote><p>  最后还是把虚拟机的安装过程放出来（可做参考）</p><p>  <img src="http://cdn.ruoshuisanqian.site/ubuntu安装教程.jpg" alt></p><blockquote><p><strong>2019/6/21：</strong>很久没写博客了，水一下。</p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-Jenkins学习–虚拟机坑点1&quot;&gt;&lt;a href=&quot;#1-Jenkins学习–虚拟机坑点1&quot; class=&quot;headerlink&quot; title=&quot;1.Jenkins学习–虚拟机坑点1&quot;&gt;&lt;/a&gt;1.Jenkins学习–虚拟
      
    
    </summary>
    
      <category term="CD-CI" scheme="https://hicksalmon.gitee.io/categories/CD-CI/"/>
    
    
      <category term="持续集成" scheme="https://hicksalmon.gitee.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>空虚【百度词条】</title>
    <link href="https://hicksalmon.gitee.io/2019/05/07/%E7%A9%BA%E8%99%9A%E3%80%90%E7%99%BE%E5%BA%A6%E8%AF%8D%E6%9D%A1%E3%80%91/"/>
    <id>https://hicksalmon.gitee.io/2019/05/07/空虚【百度词条】/</id>
    <published>2019-05-07T14:18:43.518Z</published>
    <updated>2019-05-07T14:18:43.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="空虚【百度词条】"><a href="#空虚【百度词条】" class="headerlink" title="空虚【百度词条】"></a>空虚【百度词条】</h2><hr><h4 id="产生"><a href="#产生" class="headerlink" title="产生"></a>产生</h4><blockquote><p> 心理空虚是不思追求、无所事事或不愿事事造成的。因为不思追求，失去了人生的奋斗目标，就不会有奋斗的乐趣和成功的欢愉。因为无所事事或不愿事事，就会感到生活无聊、心灵空乏虚无，就会感到寂寞难忍。于是，为了摆脱这种心理上的饥饿，就有可能因寻求刺激而去抽烟、喝酒、赌博、甚至闹事，以此来排遣时间。个别的还会走上偷盗、奸淫等犯罪的道路。空虚通常发生在这样两种情景之中：一种是物质条件优越，无需为生活烦恼和忙碌，习惯并满足于享受，看不到也不愿看到人生的真实意义，没有也不想有积极的生活目的；另一种是心比天高，对人们通常向往的目标不屑追求，而自己向往的目标又无法达到而难以追求，结果是无所追求，心灵虚无空荡，精神无从着落。</p></blockquote><h4 id="空虚和慵懒"><a href="#空虚和慵懒" class="headerlink" title="空虚和慵懒"></a>空虚和慵懒</h4><blockquote><p>空虚与慵懒不同。慵懒是心理上的懒散，是惰性使然，慵懒虽然是诱发空虚的条件，是不思追求、无所事事或不愿事事的温床，但慵懒未必一定导致空虚，因为慵懒的人心理上也可能很“充实”——喜欢懒散生活、满足懒散现状，尽管这种“充实”是消极的，对常人来讲是难以理解的，但慵懒的人并不会感到心理空虚。当然，慵懒的人如果逐渐感到无聊、寂寞、万事不称心并向往通过消极的新鲜刺激来排遣此种心情，以消磨时光，则就会演变成空虚的人。</p></blockquote><h4 id="克服空虚"><a href="#克服空虚" class="headerlink" title="克服空虚"></a>克服空虚</h4><blockquote><p>要对抗空虚就要看清空虚的本质就是不存在。这时如能转移注意力做些“实质”的活动，如逛街就认真挑选衣物、聚会时就专心与人谈话，都可有效驱除空虚感。至于常感到空虚的人，很可能是活得不踏实。有些人在生活中怀有不切实际的期望或目标，自己总是在生活中追寻些什么，而没有落实到现实生活本身，不免常有虚幻感。要挥别空虚感就要建立“务实不务虚”的生活态度，能“活在当下”的人，心中是不会有这么一个黑洞的。要做到：</p></blockquote><ol><li>对社会应有一种较为现实的认识；</li><li>磨炼意志，正确对待失误与挫折；</li><li>多读名人传记；</li><li>积极参与社会实践；</li><li>多参加有益的娱乐活动；</li><li>正确的自我认识。</li></ol><blockquote><p><strong>2019/5/7：</strong>骚练说你这是空虚，我百度了一下什么是空虚。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;空虚【百度词条】&quot;&gt;&lt;a href=&quot;#空虚【百度词条】&quot; class=&quot;headerlink&quot; title=&quot;空虚【百度词条】&quot;&gt;&lt;/a&gt;空虚【百度词条】&lt;/h2&gt;&lt;hr&gt;
&lt;h4 id=&quot;产生&quot;&gt;&lt;a href=&quot;#产生&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="心情" scheme="https://hicksalmon.gitee.io/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="心情" scheme="https://hicksalmon.gitee.io/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 复杂链表的复制</title>
    <link href="https://hicksalmon.gitee.io/2019/04/29/%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6/"/>
    <id>https://hicksalmon.gitee.io/2019/04/29/复杂链表的复制/</id>
    <published>2019-04-29T12:42:43.505Z</published>
    <updated>2019-04-29T12:42:43.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="复杂链表的复制"><a href="#复杂链表的复制" class="headerlink" title="复杂链表的复制"></a>复杂链表的复制</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class RandomListNode &#123;</span></span><br><span class="line"><span class="comment">    int label;</span></span><br><span class="line"><span class="comment">    RandomListNode next = null;</span></span><br><span class="line"><span class="comment">    RandomListNode random = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    RandomListNode(int label) &#123;</span></span><br><span class="line"><span class="comment">        this.label = label;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RandomListNode <span class="title">Clone</span><span class="params">(RandomListNode pHead)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pHead == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//终极第一步：将原链表中的每个元素进行复制，并且放在相应元素的后面待用，如链表为1，2，3，现在复制过后为</span></span><br><span class="line">        <span class="comment">//1，1'，2，2',3,3'</span></span><br><span class="line">        RandomListNode currentNode = pHead;</span><br><span class="line">        <span class="keyword">while</span>(currentNode != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//先将需要复制的值创建出来，然后再插入应该插入的位置,同时原本位置发生改变的，我们要提前创建放在那里</span></span><br><span class="line">            <span class="comment">//待用，比如这里的currentNode的next</span></span><br><span class="line">            RandomListNode cloneNode = <span class="keyword">new</span> RandomListNode(currentNode.label);</span><br><span class="line">            RandomListNode nextNode = currentNode.next;</span><br><span class="line">            currentNode.next = cloneNode;</span><br><span class="line">            cloneNode.next = nextNode;</span><br><span class="line">            currentNode = nextNode;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//终极第二步：接下来就是将复制出来的那些节点的random指向正确的RandomListNode</span></span><br><span class="line">        <span class="comment">//首先让当前节点回到正确的头节点位置，咱们好重新来过</span></span><br><span class="line">        currentNode = pHead;</span><br><span class="line">        <span class="keyword">while</span>(currentNode != <span class="keyword">null</span>)&#123;</span><br><span class="line">            currentNode.next.random = currentNode.random == <span class="keyword">null</span> ? <span class="keyword">null</span> : currentNode.random.next;</span><br><span class="line">            currentNode = currentNode.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//终极第三步：最后将原来的链表与现在新生成的链表进行分离，且返回复制的链表头节点</span></span><br><span class="line">        <span class="comment">//首先还是将currentNode回到最初的起点，记忆中你青涩的脸。2333......</span></span><br><span class="line">        currentNode = pHead;</span><br><span class="line">        RandomListNode pCloneHead = currentNode.next;</span><br><span class="line">        <span class="keyword">while</span>(currentNode != <span class="keyword">null</span>)&#123;</span><br><span class="line">            RandomListNode cloneNode = currentNode.next;</span><br><span class="line">            currentNode.next = cloneNode.next;</span><br><span class="line">            cloneNode.next = cloneNode.next == <span class="keyword">null</span> ? <span class="keyword">null</span> : cloneNode.next.next;</span><br><span class="line">            currentNode = currentNode.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pCloneHead;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>告诫自己：</strong>不管怎样，要努力保持清醒的头脑，明白现在的你需要干什么。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;复杂链表的复制&quot;&gt;&lt;a href=&quot;#复杂链表的复制&quot; class=&quot;headerlink&quot; title=&quot;复杂链表的复制&quot;&gt;&lt;/a&gt;复杂链表的复制&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>漫游</title>
    <link href="https://hicksalmon.gitee.io/2019/04/29/%E6%BC%AB%E6%B8%B8/"/>
    <id>https://hicksalmon.gitee.io/2019/04/29/漫游/</id>
    <published>2019-04-29T03:16:46.196Z</published>
    <updated>2019-04-29T03:17:44.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漫游"><a href="#漫游" class="headerlink" title="漫游"></a>漫游</h2><hr><ul><li><strong>题记：</strong>Talking to the moon ，放不下的理由，是不是会担心，变成一只野兽，Walking on the roof ，为心跳的节奏是不是会暂停，在世界的尽头。</li></ul><hr><p><img src="http://cdn.ruoshuisanqian.site/xinruzhishui.jpg" alt></p><hr><p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高考后，就没有认认真真写过东西，最近思想像是出现了问题，正好静下心来写一写，看看自己都在思考一些什么。</p><p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自己的思想实际有时候很有意思的。可笑，无助，佛系，坚决······，本无关联，甚至对立面的东西，不同的时候都能找到一点影子。</p><p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昨天帮朋友的朋友装了系统，出于一点强迫症，给她将系统头像和系统名换成了她的微信头像和微信昵称，事后，人家说，很好用，你真细心。一时竟不知如何回答，想了一下才说了句，个人强迫症。没说实际自己挺粗心大意的，因为粗心，无所谓，曾经弄丢了一个人。</p><p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在想想，说不上后悔，但也说不上放得开。有时觉得自己就是一条洄游的三文鱼，像是一生只有一个目标，就算力竭而亡，也不负初心，但同时又只是一条鱼，他只有七秒的记忆。游着游着就忘记了，原来还有一条鱼和你一起在向最后的目标努力着。只是有一天，那条鱼已经承受不住这漫长的旅程，身死力竭。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写到这里，竟不知要继续回忆一些什么，思考一些什么。我这暗绿色的键盘颜色，一如此刻的心情，安静，淡然，不舍。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;众味杂陈。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;窗外修远楼的墙体，大致是经历的日晒和风雨多了。原本那种灰色是有一丝明快的感觉，如今他却没有光泽，有些黯淡，又如今天的天气，云色阴沉。而反观一旁的外国语学院，却像是一位可爱和蔼的婆婆，虽年岁已高，没有艳丽容颜，却格外沉稳，静默。此刻的建筑倒是像活了，有了个性。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而我什么时候能活，我给自己凿了一个墓，固执的将灵魂埋在了里面。生命是如此多彩，建筑都这么可爱，而你在倔强的思考着什么。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;哦，这只是一个真实的梦而已。六点半了，该起床了······</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;漫游&quot;&gt;&lt;a href=&quot;#漫游&quot; class=&quot;headerlink&quot; title=&quot;漫游&quot;&gt;&lt;/a&gt;漫游&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;题记：&lt;/strong&gt;Talking to the moon ，放不下的理由，是不是会担心，变成一只
      
    
    </summary>
    
      <category term="随记" scheme="https://hicksalmon.gitee.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="随记" scheme="https://hicksalmon.gitee.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer  二叉树中和为某一值的路径</title>
    <link href="https://hicksalmon.gitee.io/2019/04/28/%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84/"/>
    <id>https://hicksalmon.gitee.io/2019/04/28/二叉树中和为某一值的路径/</id>
    <published>2019-04-28T13:43:20.137Z</published>
    <updated>2019-04-28T13:43:20.238Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉树中和为某一值的路径"><a href="#二叉树中和为某一值的路径" class="headerlink" title="二叉树中和为某一值的路径"></a>二叉树中和为某一值的路径</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>输入一颗二叉树的跟节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前)</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*题目大意：就是说从根节点到某一个叶子节点这条路径上的左右值相加等于target，那么这条路径就可以满足条件从而加入都这个ArrayList</span></span><br><span class="line"><span class="comment">里面</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; listAll = <span class="keyword">new</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</span><br><span class="line">    ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; FindPath(TreeNode root,<span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> listAll;</span><br><span class="line">        &#125;</span><br><span class="line">        list.add(root.val);</span><br><span class="line">        target -= root.val;</span><br><span class="line">        <span class="comment">//这里&amp;&amp;，是左右满足才满足，如果第一个不满足，后面的就不用看了</span></span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span> &amp;&amp; root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>)&#123;</span><br><span class="line">            listAll.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(list));</span><br><span class="line">        &#125;</span><br><span class="line">        FindPath(root.left,target);</span><br><span class="line">        FindPath(root.right,target);</span><br><span class="line">        <span class="comment">//这里实际我不是很清楚，总感觉有点不对劲，但是也说不上来。这波题解看的我有点懵逼，回复里面说了，是移除</span></span><br><span class="line">        <span class="comment">//最后一个元素，深度遍历完一条路径后要回退，但我不是很明白，希望以后能动这个为什么是这样</span></span><br><span class="line">        list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> listAll;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>收获：</strong>今天帮一个妹子装了系统，学会了一个单词，Apathy，冷漠的意思。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;二叉树中和为某一值的路径&quot;&gt;&lt;a href=&quot;#二叉树中和为某一值的路径&quot; class=&quot;headerlink&quot; title=&quot;二叉树中和为某一值的路径&quot;&gt;&lt;/a&gt;二叉树中和为某一值的路径&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 二叉搜索树的后序遍历序列</title>
    <link href="https://hicksalmon.gitee.io/2019/04/27/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97/"/>
    <id>https://hicksalmon.gitee.io/2019/04/27/二叉搜索树的后序遍历序列/</id>
    <published>2019-04-27T09:29:32.272Z</published>
    <updated>2019-04-27T09:29:32.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉搜索树的后序遍历序列"><a href="#二叉搜索树的后序遍历序列" class="headerlink" title="二叉搜索树的后序遍历序列"></a>二叉搜索树的后序遍历序列</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*做题之前需明白两点：</span></span><br><span class="line"><span class="comment">*1.先序遍历：根左右-----中序遍历：左根右-----后序遍历：左右根</span></span><br><span class="line"><span class="comment">2.所谓二叉搜索树，又叫二叉查找树，二叉排序树，其特点是，所有的右子树的值小于根的值，根的值小于右子树的值，每个子树又全部是满足二叉搜索树的特点的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">VerifySquenceOfBST</span><span class="params">(<span class="keyword">int</span> [] sequence)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(sequence.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sequence.length == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> check(sequence, <span class="number">0</span>, sequence.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span>[] sequence, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="comment">//这里是递归结束的判断依据</span></span><br><span class="line">        <span class="keyword">if</span>(start &gt;= end)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = start;</span><br><span class="line">        <span class="keyword">while</span>(sequence[i] &lt; sequence[end])&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; end; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sequence[j] &lt; sequence[end])</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> check(sequence, start, i - <span class="number">1</span>) || check(sequence,i, end - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>情感：</strong>是不是真的相信这世上有纯洁的友谊。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;二叉搜索树的后序遍历序列&quot;&gt;&lt;a href=&quot;#二叉搜索树的后序遍历序列&quot; class=&quot;headerlink&quot; title=&quot;二叉搜索树的后序遍历序列&quot;&gt;&lt;/a&gt;二叉搜索树的后序遍历序列&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 从上往下打印二叉树</title>
    <link href="https://hicksalmon.gitee.io/2019/04/26/%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://hicksalmon.gitee.io/2019/04/26/从上往下打印二叉树/</id>
    <published>2019-04-26T12:26:17.613Z</published>
    <updated>2019-04-26T13:20:53.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从上往下打印二叉树"><a href="#从上往下打印二叉树" class="headerlink" title="从上往下打印二叉树"></a>从上往下打印二叉树</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>从上往下打印出二叉树的每个节点，同层节点从左至右打印。</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*利用ArrayList来模拟一个队列</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">PrintFromTopToBottom</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        ArrayList&lt;TreeNode&gt; queue = <span class="keyword">new</span> ArrayList&lt;TreeNode&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        queue.add(root);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(queue.size() != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//ArrayList中的remove方法如果参数是int类型的，那么则会在移除该数值位置的那个值，</span></span><br><span class="line">            <span class="comment">//并且返回值是移除的这个值如果不清楚，可以参照图片中的顺序</span></span><br><span class="line">            TreeNode temp = queue.remove(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(temp.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                queue.add(temp.left);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(temp.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                queue.add(temp.right);</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(temp.val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.ruoshuisanqian.site/111.jpg" alt></p><hr><blockquote><p><strong>感悟：</strong>今天没什么写的，也许是最好的记录。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;从上往下打印二叉树&quot;&gt;&lt;a href=&quot;#从上往下打印二叉树&quot; class=&quot;headerlink&quot; title=&quot;从上往下打印二叉树&quot;&gt;&lt;/a&gt;从上往下打印二叉树&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 栈的压入，弹出序列</title>
    <link href="https://hicksalmon.gitee.io/2019/04/25/%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%EF%BC%8C%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/"/>
    <id>https://hicksalmon.gitee.io/2019/04/25/栈的压入，弹出序列/</id>
    <published>2019-04-25T13:45:25.596Z</published>
    <updated>2019-04-25T13:45:25.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="栈的压入，弹出序列"><a href="#栈的压入，弹出序列" class="headerlink" title="栈的压入，弹出序列"></a>栈的压入，弹出序列</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*此处的思路借助一个辅助的栈用来模拟压栈的过程，没次压入一个值，我们将这个值与弹出栈的值相比较看是否相等，如果想等就弹出，然后继续</span></span><br><span class="line"><span class="comment">*判断之前压入的是否没弹出栈中的下一个元素相等，相等就弹出，重复进行，如果不想等，就压入下一个元素再继续比较，直到所有元素压栈完成</span></span><br><span class="line"><span class="comment">*如果辅助栈中的元素不为空，则说明没有符合的弹出顺序。</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">IsPopOrder</span><span class="params">(<span class="keyword">int</span> [] pushA,<span class="keyword">int</span> [] popA)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pushA.length == <span class="number">0</span> || popA.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//辅助栈</span></span><br><span class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">        <span class="comment">//用来记录弹出栈中的下标序号</span></span><br><span class="line">        <span class="keyword">int</span> popIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pushA.length; i++)&#123;</span><br><span class="line">          stack.push(pushA[i]);</span><br><span class="line">            <span class="comment">//在这里判断辅助栈是否为空，且当前栈顶元素和弹栈的那个元素是否相等</span></span><br><span class="line">          <span class="keyword">while</span>(!stack.empty() &amp;&amp; stack.peek() == popA[popIndex])&#123;</span><br><span class="line">              stack.pop();</span><br><span class="line">              popIndex ++;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">        <span class="keyword">return</span> stack.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>用代码麻痹自己：</strong>今天是你的生日，我却没资格送你生日的祝福，希望学习可以麻痹自己，希望你幸福，希望我能早日忘记昨天的不快。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;栈的压入，弹出序列&quot;&gt;&lt;a href=&quot;#栈的压入，弹出序列&quot; class=&quot;headerlink&quot; title=&quot;栈的压入，弹出序列&quot;&gt;&lt;/a&gt;栈的压入，弹出序列&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 包含min函数的栈</title>
    <link href="https://hicksalmon.gitee.io/2019/04/24/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/"/>
    <id>https://hicksalmon.gitee.io/2019/04/24/包含min函数的栈/</id>
    <published>2019-04-24T13:02:06.118Z</published>
    <updated>2019-04-24T13:02:06.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="包含min函数的栈"><a href="#包含min函数的栈" class="headerlink" title="包含min函数的栈"></a>包含min函数的栈</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为O（1））。</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*利用两个栈，一个保存传入的数据，一个用来依次保存出现的数字中更小的数字，比如第一次传进来的是 2 ，第二次传进来的</span></span><br><span class="line"><span class="comment">*是 1 ，这个时候我们将1继续放在最小数栈的的顶部，这样就能一直保证那个最小栈的栈顶一直放的是最小的那个数</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; minStack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">    Integer temp = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(temp != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(temp &gt; node)&#123;</span><br><span class="line">                temp = node;</span><br><span class="line">                minStack.push(node);</span><br><span class="line">            &#125;</span><br><span class="line">            stack.push(node);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            minStack.push(node);</span><br><span class="line">            stack.push(node);</span><br><span class="line">            temp = node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = stack.pop();</span><br><span class="line">        <span class="keyword">int</span> numMin = minStack.pop();</span><br><span class="line">        <span class="keyword">if</span>(num != numMin)&#123;</span><br><span class="line">            minStack.push(numMin);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = stack.pop();</span><br><span class="line">        <span class="keyword">int</span> numMin = minStack.pop();</span><br><span class="line">        <span class="keyword">if</span>(num != numMin)&#123;</span><br><span class="line">            minStack.push(numMin);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> minNum = minStack.pop();</span><br><span class="line">        minStack.push(minNum);</span><br><span class="line">        <span class="keyword">return</span> minNum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>不是自己：</strong>明天是个好日子，3月21。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;包含min函数的栈&quot;&gt;&lt;a href=&quot;#包含min函数的栈&quot; class=&quot;headerlink&quot; title=&quot;包含min函数的栈&quot;&gt;&lt;/a&gt;包含min函数的栈&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 顺时针打印矩阵</title>
    <link href="https://hicksalmon.gitee.io/2019/04/23/%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5/"/>
    <id>https://hicksalmon.gitee.io/2019/04/23/顺时针打印矩阵/</id>
    <published>2019-04-23T14:00:50.491Z</published>
    <updated>2019-04-23T14:00:50.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="顺时针打印矩阵"><a href="#顺时针打印矩阵" class="headerlink" title="顺时针打印矩阵"></a>顺时针打印矩阵</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printMatrix</span><span class="params">(<span class="keyword">int</span> [][] matrix)</span> </span>&#123;</span><br><span class="line">       ArrayList&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span>(matrix == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> hight = matrix.length;</span><br><span class="line">        <span class="keyword">int</span> wide = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="comment">//计算出要进行顺时钟打印的圈数</span></span><br><span class="line">        <span class="comment">//这里为什么是取小的那个数来计算层数，这个我也说不上来，因为我只是一只小猫咪，23333。。。。</span></span><br><span class="line">        <span class="keyword">int</span> count = (Math.min(hight,wide) -<span class="number">1</span>)/<span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)&#123;</span><br><span class="line">            <span class="comment">//先让从左向右的值存进去；</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = i; k &lt; wide - i; k++)&#123;</span><br><span class="line">                result.add(matrix[i][k]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//再存从由右上到右下的值；</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; hight - i; j++)&#123;</span><br><span class="line">                result.add(matrix[j][wide-i-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//再存从右下到左下的值；</span></span><br><span class="line">            <span class="comment">//这里约束条件里hight-i-1 != i是为了不重复添加先从左到右添加的数，</span></span><br><span class="line">            <span class="comment">//如果都是那一行就没必要进行添加了</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = wide - i - <span class="number">2</span>;k &gt;= i &amp;&amp; (hight-i-<span class="number">1</span> != i); k--)&#123;</span><br><span class="line">                result.add(matrix[hight-i-<span class="number">1</span>][k]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//最后存从左下到左上的值。</span></span><br><span class="line">            <span class="comment">//这里约束条件里wide-i-1 != i是为了不重复添加先从左上到左下添加的数，</span></span><br><span class="line">            <span class="comment">//如果都是那一列就没必要进行添加了</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = hight - i - <span class="number">2</span>;(j &gt; i) &amp;&amp; (wide-i-<span class="number">1</span> != i); j--)&#123;</span><br><span class="line">                result.add(matrix[j][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>对不起我没憋住：</strong>今天群里有位老哥的狗，会自己跑到洗手间便便，从不乱拉，这让我感觉很有意思。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;顺时针打印矩阵&quot;&gt;&lt;a href=&quot;#顺时针打印矩阵&quot; class=&quot;headerlink&quot; title=&quot;顺时针打印矩阵&quot;&gt;&lt;/a&gt;顺时针打印矩阵&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 二叉树的镜像</title>
    <link href="https://hicksalmon.gitee.io/2019/04/22/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F/"/>
    <id>https://hicksalmon.gitee.io/2019/04/22/二叉树的镜像/</id>
    <published>2019-04-22T13:10:40.218Z</published>
    <updated>2019-04-22T13:10:32.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉树的镜像"><a href="#二叉树的镜像" class="headerlink" title="二叉树的镜像"></a>二叉树的镜像</h2><hr><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><hr><p>操作给定的二叉树，将其变换为源二叉树的镜像。</p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">二叉树的镜像定义：源二叉树 </span><br><span class="line">        <span class="number">8</span></span><br><span class="line">       /  \</span><br><span class="line">      <span class="number">6</span>   <span class="number">10</span></span><br><span class="line">     / \  / \</span><br><span class="line">    <span class="number">5</span>  <span class="number">7</span> <span class="number">9</span> <span class="number">11</span></span><br><span class="line">    镜像二叉树</span><br><span class="line">        <span class="number">8</span></span><br><span class="line">       /  \</span><br><span class="line">      <span class="number">10</span>   <span class="number">6</span></span><br><span class="line">     / \  / \</span><br><span class="line">    <span class="number">11</span> <span class="number">9</span> <span class="number">7</span>  <span class="number">5</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">public class TreeNode &#123;</span><br><span class="line">    int val = <span class="number">0</span>;</span><br><span class="line">    TreeNode left = null;</span><br><span class="line">    TreeNode right = null;</span><br><span class="line"></span><br><span class="line">    public TreeNode(int val) &#123;</span><br><span class="line">        this.val = val;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">*/</span><br><span class="line">public class Solution &#123;</span><br><span class="line">    public void Mirror(TreeNode root) &#123;</span><br><span class="line">        TreeNode tmp = null;</span><br><span class="line">        //当树不为空的时候我们将左子树和右子树交换</span><br><span class="line">        <span class="keyword">if</span>(root != null)&#123;</span><br><span class="line">            tmp = root.left;</span><br><span class="line">            root.left = root.right;</span><br><span class="line">            root.right = tmp;</span><br><span class="line">            //当左子树不为空的时候，继续进行递归</span><br><span class="line">            <span class="keyword">if</span>(root.left != null)&#123;</span><br><span class="line">                Mirror(root.left);</span><br><span class="line">            &#125;</span><br><span class="line">            //当右子树不为空的时候，继续进行递归</span><br><span class="line">            <span class="keyword">if</span>(root.right != null)&#123;</span><br><span class="line">                Mirror(root.right);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>水水更健康：</strong>今天听说B站的源码被上传到github上了，本人在此声明：从未clone，下载或者以任何途径获得bilibili公司的任何非正常途径公开的代码。也没有参与，传播，任何bilibili的负面信息，且不认识看源码的兄弟。特此声明！划清界限</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;二叉树的镜像&quot;&gt;&lt;a href=&quot;#二叉树的镜像&quot; class=&quot;headerlink&quot; title=&quot;二叉树的镜像&quot;&gt;&lt;/a&gt;二叉树的镜像&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer 树的子结构</title>
    <link href="https://hicksalmon.gitee.io/2019/04/21/%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/"/>
    <id>https://hicksalmon.gitee.io/2019/04/21/树的子结构/</id>
    <published>2019-04-21T14:05:37.421Z</published>
    <updated>2019-04-21T14:05:37.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树的子结构"><a href="#树的子结构" class="headerlink" title="树的子结构"></a>树的子结构</h2><hr><p>###题目描述<br>输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子结构）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">public class TreeNode &#123;</span><br><span class="line">    int val = <span class="number">0</span>;</span><br><span class="line">    TreeNode left = null;</span><br><span class="line">    TreeNode right = null;</span><br><span class="line"></span><br><span class="line">    public TreeNode(int val) &#123;</span><br><span class="line">        this.val = val;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">*/</span><br><span class="line">public class Solution &#123;</span><br><span class="line">    public boolean HasSubtree(TreeNode root1,TreeNode root2) &#123;</span><br><span class="line">        boolean result = false;</span><br><span class="line">//只有当两棵树都不为空才进行比较，否则返回false</span><br><span class="line">        <span class="keyword">if</span>(root1 != null &amp;&amp; root2 != null)&#123;</span><br><span class="line">//如果当前节点值相等，我们则继续进行从当前节点的比较</span><br><span class="line">            <span class="keyword">if</span>(root1.val == root2.val)&#123;</span><br><span class="line">                result = isHaveRootB(root1,root2);</span><br><span class="line">            &#125;</span><br><span class="line">//如果当前节点不相等，我们继续比较root2是不是左子树的子树</span><br><span class="line">            <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">                result = HasSubtree(root1.left,root2);</span><br><span class="line">            &#125;</span><br><span class="line">//如果当前节点不相等，我们继续比较root2是不是右子树的子树</span><br><span class="line">            <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">                result = HasSubtree(root1.right,root2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static boolean isHaveRootB(TreeNode node1,TreeNode node2)&#123;</span><br><span class="line">//如果子树已经遍历到最后，则前面都相等，此时说明是子树，返回true</span><br><span class="line">        <span class="keyword">if</span>(node2 == null)&#123;</span><br><span class="line">            <span class="keyword">return</span> true;</span><br><span class="line">        &#125;</span><br><span class="line">//如果node1已经遍历完，说明没找到，此时返回false</span><br><span class="line">        <span class="keyword">if</span>(node1 == null)&#123;</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">//如果两个值不相等，说明不是的，直接返回false</span><br><span class="line">        <span class="keyword">if</span>(node1.val != node2.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">//如果当前节点的值相等，则我们继续比较他们的左子树和右子树是不是相等</span><br><span class="line">        <span class="keyword">return</span> isHaveRootB(node1.left,node2.left) &amp;&amp; isHaveRootB(node1.right,node2.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><blockquote><p><strong>修炼：</strong>每一次做题都不会辜负自己。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;树的子结构&quot;&gt;&lt;a href=&quot;#树的子结构&quot; class=&quot;headerlink&quot; title=&quot;树的子结构&quot;&gt;&lt;/a&gt;树的子结构&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;###题目描述&lt;br&gt;输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子
      
    
    </summary>
    
      <category term="刷题" scheme="https://hicksalmon.gitee.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="https://hicksalmon.gitee.io/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>程序员修炼之路</title>
    <link href="https://hicksalmon.gitee.io/2019/04/20/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E8%B7%AF/"/>
    <id>https://hicksalmon.gitee.io/2019/04/20/程序员修炼之路/</id>
    <published>2019-04-20T03:58:27.864Z</published>
    <updated>2019-04-20T03:58:28.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="程序员修炼之路"><a href="#程序员修炼之路" class="headerlink" title="程序员修炼之路"></a>程序员修炼之路</h2><hr><p><a href="https://github.com/Snailclimb/programmer-advancement" target="_blank" rel="noopener">https://github.com/Snailclimb/programmer-advancement</a></p><hr><blockquote><p><strong>修炼：</strong>和优秀的人一起久了，也会变得优秀。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;程序员修炼之路&quot;&gt;&lt;a href=&quot;#程序员修炼之路&quot; class=&quot;headerlink&quot; title=&quot;程序员修炼之路&quot;&gt;&lt;/a&gt;程序员修炼之路&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Snailclimb/progra
      
    
    </summary>
    
      <category term="资源" scheme="https://hicksalmon.gitee.io/categories/%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="资源" scheme="https://hicksalmon.gitee.io/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>计划清单</title>
    <link href="https://hicksalmon.gitee.io/2019/04/17/%E7%BC%98%E8%B5%B7/"/>
    <id>https://hicksalmon.gitee.io/2019/04/17/缘起/</id>
    <published>2019-04-17T00:40:29.763Z</published>
    <updated>2019-04-20T13:40:04.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><hr><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.一个人去泰山看一次日出；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.坚持早睡早起多运动；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.找到一份工作；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.刷150道题（leetcode 或者其他优先刷完剑指offer）；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.看两本好书。</p><hr><blockquote><p><strong>人生：</strong>只有平淡才能让自己的人生走的更远，只有多去看世界才能有与众不同的眼界。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.一个人去泰山看一次日出；&lt;br&gt;&amp;nbsp;&amp;nbsp
      
    
    </summary>
    
      <category term="计划" scheme="https://hicksalmon.gitee.io/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="清单" scheme="https://hicksalmon.gitee.io/tags/%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>梦</title>
    <link href="https://hicksalmon.gitee.io/2019/04/16/%E6%A2%A6%EF%BC%9F/"/>
    <id>https://hicksalmon.gitee.io/2019/04/16/梦？/</id>
    <published>2019-04-16T02:56:06.319Z</published>
    <updated>2019-04-16T04:44:15.077Z</updated>
    
    <content type="html"><![CDATA[<p><strong>昨日</strong>     一梦惊醒睡中人，我是真睡是假睡？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;昨日&lt;/strong&gt;     一梦惊醒睡中人，我是真睡是假睡？&lt;/p&gt;

      
    
    </summary>
    
      <category term="心情" scheme="https://hicksalmon.gitee.io/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="随记" scheme="https://hicksalmon.gitee.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
</feed>
